{"ast":null,"code":"import _objectSpread from\"/home/aravind/Desktop/pipeline/kyvor/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/aravind/Desktop/pipeline/kyvor/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aravind/Desktop/pipeline/kyvor/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/aravind/Desktop/pipeline/kyvor/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/aravind/Desktop/pipeline/kyvor/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// import { Form } from 'react-bootstrap';\n// import React, { Component, Fragment } from 'react';\n// import Select from 'react-select';\n// export class Patientform extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"page-header\">\n//           <h3 className=\"page-title\"> Patient Form </h3>\n//           <nav aria-label=\"breadcrumb\">\n//             <ol className=\"breadcrumb\">\n//               <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Forms</a></li>\n//               <li className=\"breadcrumb-item active\" aria-current=\"page\">Form elements</li>\n//             </ol>\n//           </nav>\n//         </div>\n//        <div className ='row'>\n//          <div className=\" col-md-6 grid-margin stretch-card \">\n//             <div className=\"card\">\n//               <div className=\"card-body\">\n//                 <form className=\"forms-sample\">\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputUsername1\">Project Name</label>\n//                     <Form.Control type=\"text\" id=\"exampleInputUsername1\" placeholder=\"project Name\" size=\"lg\" />\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputCancerType\">Cancer Type</label>\n//                           <select className=\"form-control\">\n//                             <option>Tumor</option>\n//                             <option>Brain</option>\n//                             <option>Lung</option>\n//                             <option>Blood</option>\n//                           </select>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 1</label>\n//                     <div className=\"custom-file\">\n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 2</label>\n//                     <div className=\"custom-file\">\n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 3</label>\n//                     <div className=\"custom-file\">\n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 4</label>\n//                     <div className=\"custom-file\">\n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                   <div className=\"custom-control custom-switch\">\n//                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" />\n//              <label className=\"custom-control-label\" for=\"customSwitch1\">Project Rerun</label>\n//              </div>\n//                   </Form.Group>\n//                   <div class=\"col text-center\">\n//                   <button type=\"submit\" className=\"btn  btn-info mr-2 btn-sm\">Submit</button>\n//                   <button className=\"btn btn-light btn-sm\">Cancel</button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           </div>\n//        </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Patientform\nimport React,{Component}from'react';import{Field,reduxForm}from'redux-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Patientform=/*#__PURE__*/function(_Component){_inherits(Patientform,_Component);var _super=_createSuper(Patientform);function Patientform(){var _this;_classCallCheck(this,Patientform);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderField=function(_ref){var input=_ref.input,label=_ref.label,_ref$meta=_ref.meta,touched=_ref$meta.touched,error=_ref$meta.error;return/*#__PURE__*/_jsxs(\"div\",{className:\"field \".concat(touched&&error?'error':''),children:[/*#__PURE__*/_jsx(\"label\",{children:label}),/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},input),{},{autoComplete:\"off\"})),touched&&error&&/*#__PURE__*/_jsx(\"span\",{className:\"ui pointing red basic label\",children:error})]});};_this.onSubmit=function(formValues){_this.props.onSubmit(formValues);};return _this;}_createClass(Patientform,[{key:\"render\",value:function render(){var btnText=\"\".concat(this.props.initialValues?'Update':'Add');return/*#__PURE__*/_jsx(\"div\",{className:\"ui segment\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.props.handleSubmit(this.onSubmit),className:\"ui form error\",children:[/*#__PURE__*/_jsx(Field,{name:\"task\",component:this.renderField,label:\"Task\"}),/*#__PURE__*/_jsx(\"button\",{className:\"ui primary button\",children:btnText})]})});}}]);return Patientform;}(Component);var validate=function validate(formValues){var errors={};if(!formValues.task){errors.task='Please enter at least 1 character';}return errors;};export default reduxForm({form:'todoForm',touchOnBlur:false,validate:validate})(Patientform);","map":{"version":3,"sources":["/home/aravind/Desktop/pipeline/kyvor/front/src/app/form-elements/Patientform.js"],"names":["React","Component","Field","reduxForm","Patientform","renderField","input","label","meta","touched","error","onSubmit","formValues","props","btnText","initialValues","handleSubmit","validate","errors","task","form","touchOnBlur"],"mappings":"oxBACA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,C,2FAEMC,CAAAA,W,+UACJC,W,CAAc,cAAgD,IAA7CC,CAAAA,KAA6C,MAA7CA,KAA6C,CAAtCC,KAAsC,MAAtCA,KAAsC,gBAA/BC,IAA+B,CAAvBC,OAAuB,WAAvBA,OAAuB,CAAdC,KAAc,WAAdA,KAAc,CAC5D,mBACE,aAAK,SAAS,iBAAWD,OAAO,EAAIC,KAAX,CAAmB,OAAnB,CAA6B,EAAxC,CAAd,wBACE,uBAAQH,KAAR,EADF,cAEE,4CAAWD,KAAX,MAAkB,YAAY,CAAC,KAA/B,GAFF,CAGGG,OAAO,EAAIC,KAAX,eACC,aAAM,SAAS,CAAC,6BAAhB,UAA+CA,KAA/C,EAJJ,GADF,CASD,C,OAEDC,Q,CAAW,SAAAC,UAAU,CAAI,CACvB,MAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB,EACD,C,6DAED,iBAAS,CACP,GAAME,CAAAA,OAAO,WAAM,KAAKD,KAAL,CAAWE,aAAX,CAA2B,QAA3B,CAAsC,KAA5C,CAAb,CACA,mBACE,YAAK,SAAS,CAAC,YAAf,uBACE,cACE,QAAQ,CAAE,KAAKF,KAAL,CAAWG,YAAX,CAAwB,KAAKL,QAA7B,CADZ,CAEE,SAAS,CAAC,eAFZ,wBAIE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAE,KAAKN,WAAnC,CAAgD,KAAK,CAAC,MAAtD,EAJF,cAKE,eAAQ,SAAS,CAAC,mBAAlB,UAAuCS,OAAvC,EALF,GADF,EADF,CAWD,C,yBA9BuBb,S,EAiC1B,GAAMgB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAL,UAAU,CAAI,CAC7B,GAAMM,CAAAA,MAAM,CAAG,EAAf,CAEA,GAAI,CAACN,UAAU,CAACO,IAAhB,CAAsB,CACpBD,MAAM,CAACC,IAAP,CAAc,mCAAd,CACD,CAED,MAAOD,CAAAA,MAAP,CACD,CARD,CAUA,cAAef,CAAAA,SAAS,CAAC,CACvBiB,IAAI,CAAE,UADiB,CAEvBC,WAAW,CAAE,KAFU,CAGvBJ,QAAQ,CAARA,QAHuB,CAAD,CAAT,CAIZb,WAJY,CAAf","sourcesContent":["\n// import { Form } from 'react-bootstrap';\n\n\n// import React, { Component, Fragment } from 'react';\n// import Select from 'react-select';\n\n\n\n// export class Patientform extends Component {\n \n \n//   render() {\n//     return (\n//       <div>\n//         <div className=\"page-header\">\n//           <h3 className=\"page-title\"> Patient Form </h3>\n//           <nav aria-label=\"breadcrumb\">\n//             <ol className=\"breadcrumb\">\n//               <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>Forms</a></li>\n//               <li className=\"breadcrumb-item active\" aria-current=\"page\">Form elements</li>\n//             </ol>\n//           </nav>\n//         </div>\n     \n//        <div className ='row'>\n//          <div className=\" col-md-6 grid-margin stretch-card \">\n             \n//             <div className=\"card\">\n//               <div className=\"card-body\">\n             \n//                 <form className=\"forms-sample\">\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputUsername1\">Project Name</label>\n//                     <Form.Control type=\"text\" id=\"exampleInputUsername1\" placeholder=\"project Name\" size=\"lg\" />\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputCancerType\">Cancer Type</label>\n                \n//                           <select className=\"form-control\">\n//                             <option>Tumor</option>\n//                             <option>Brain</option>\n//                             <option>Lung</option>\n//                             <option>Blood</option>\n//                           </select>\n                       \n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 1</label>\n      \n//                     <div className=\"custom-file\">\n                     \n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n  \n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 2</label>\n      \n//                     <div className=\"custom-file\">\n                     \n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n  \n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 3</label>\n      \n//                     <div className=\"custom-file\">\n                   \n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n  \n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                     <label htmlFor=\"exampleInputPassword1\">Biosample Tumor File 4</label>\n      \n//                     <div className=\"custom-file\">\n                      \n\n//         <input type=\"file\" className=\"custom-file-input\" id=\"validatedCustomFile\" required /> \n//     <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\n  \n//                     </div>\n//                   </Form.Group>\n//                   <Form.Group>\n//                   <div className=\"custom-control custom-switch\">\n//                <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" />\n//              <label className=\"custom-control-label\" for=\"customSwitch1\">Project Rerun</label>\n//              </div>\n//                   </Form.Group>\n                \n                \n                 \n//                   <div class=\"col text-center\">\n//                   <button type=\"submit\" className=\"btn  btn-info mr-2 btn-sm\">Submit</button>\n//                   <button className=\"btn btn-light btn-sm\">Cancel</button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           </div>\n\n//        </div>\n//       </div>\n//     )\n//   }\n// }\n\n// export default Patientform\n\n\n\n\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass Patientform extends Component {\n  renderField = ({ input, label, meta: { touched, error } }) => {\n    return (\n      <div className={`field ${touched && error ? 'error' : ''}`}>\n        <label>{label}</label>\n        <input {...input} autoComplete='off' />\n        {touched && error && (\n          <span className='ui pointing red basic label'>{error}</span>\n        )}\n      </div>\n    );\n  };\n\n  onSubmit = formValues => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    const btnText = `${this.props.initialValues ? 'Update' : 'Add'}`;\n    return (\n      <div className='ui segment'>\n        <form\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n          className='ui form error'\n        >\n          <Field name='task' component={this.renderField} label='Task' />\n          <button className='ui primary button'>{btnText}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.task) {\n    errors.task = 'Please enter at least 1 character';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'todoForm',\n  touchOnBlur: false,\n  validate\n})(Patientform);\n"]},"metadata":{},"sourceType":"module"}